{"version":3,"sources":["actions/index.js","components/Header/Header.jsx","components/Header/index.js","components/Button/index.js","components/Button/Button.jsx","assets/svg/phone.svg","assets/svg/pencil.svg","components/ListItem/index.js","components/ListItem/ListItem.jsx","components/List/index.js","components/List/List.jsx","components/pages/Main/Main.jsx","components/pages/SignIn/SignIn.jsx","assets/svg/close.svg","components/Modal/index.js","components/Modal/Modal.jsx","components/UpsertForm/UpsertForm.jsx","components/UpsertForm/index.js","App.jsx","reducers/index.js","store.js","index.js"],"names":["setUserName","userName","type","payload","mapDispatchToProps","Header","connect","state","withRouter","history","props","className","onClick","sessionStorage","removeItem","push","Button","name","btnType","tel","icon","otherProps","btnContent","src","alt","href","ListItem","contact","photoUrl","phoneSvg","phone","id","pencilSvg","List","contacts","array","sort","a","b","nameA","toLowerCase","nameB","listItems","map","defaultValue","onChange","event","target","value","setItem","preventDefault","Modal","children","closeSvg","setName","setPhone","addContact","updateContact","UpsertForm","title","match","useEffect","params","forEach","placeholder","size","getItem","path","exact","component","SignIn","Main","render","initialState","JSON","parse","reducer","action","randomId","Math","floor","random","nanoid","stringify","idx","findIndex","updatedContact","updatedContacts","slice","store","createStore","composeWithDevTools","ReactDOM","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.8555546f.chunk.js","sourcesContent":["const setUserName = (userName) => {\r\n    return {\r\n        type: \"SET_USER_NAME\",\r\n        payload: userName\r\n    }\r\n}\r\n\r\nconst setName = (name) => {\r\n    return {\r\n        type: \"SET_NAME\",\r\n        payload: name\r\n    }\r\n}\r\n\r\nconst setPhone = (phone) => {\r\n    return {\r\n        type: \"SET_PHONE\",\r\n        payload: phone\r\n    }\r\n}\r\n\r\nconst addContact = (contact) => {\r\n    return {\r\n        type: \"ADD_CONTACT\",\r\n        payload: contact\r\n    }\r\n}\r\n\r\nconst updateContact = (contact) => {\r\n    return {\r\n        type: \"UPDATE_CONTACT\",\r\n        payload: contact\r\n    }\r\n}\r\n\r\nexport {\r\n    setUserName,\r\n    setName,\r\n    setPhone,\r\n    addContact,\r\n    updateContact\r\n}","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { setUserName } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./header.scss\";\r\n\r\nconst Header = ({ userName, history, setUserName, ...props }) => {\r\n  const logout = () => {\r\n    setUserName(\"\");\r\n    sessionStorage.removeItem(\"userName\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <header className={`header ${props.className}`}>\r\n      <h2 className=\"header__hello\">Hello, {userName}</h2>\r\n      <div className=\"header__logout\">\r\n        <button className=\"header__logout-btn\" onClick={logout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userName: state.userName,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setUserName,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Header));\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;","import Button from \"./Button\";\r\n\r\nexport default Button;","import React from \"react\";\r\nimport \"./button.scss\";\r\n\r\nconst Button = ({ name, btnType, tel, icon, ...props }) => {\r\n  const { className, ...otherProps } = props;\r\n  const btnContent = icon ? (\r\n    <img className=\"btn-ico\" src={icon} alt=\"\" />\r\n  ) : (\r\n    name\r\n  );\r\n\r\n  switch (btnType) {\r\n    case \"a\":\r\n      return (\r\n        <a href={`tel:${tel}`}>\r\n          <button className={`btn btn-call ${props.className}`} {...otherProps}>\r\n            {btnContent}\r\n          </button>\r\n        </a>\r\n      );\r\n    case \"cancel\":\r\n      return (\r\n        <button className={`btn btn-cancel ${props.className}`} {...otherProps}>\r\n          {btnContent}\r\n        </button>\r\n      );\r\n    case \"primary\":\r\n      return (\r\n        <button\r\n          className={`btn btn-primary ${props.className}`}\r\n          {...otherProps}\r\n        >\r\n          {btnContent}\r\n        </button>\r\n      );\r\n    case \"secondary\":\r\n      return (\r\n        <button\r\n          className={`btn btn-secondary ${props.className}`}\r\n          {...otherProps}\r\n        >\r\n          {btnContent}\r\n        </button>\r\n      );\r\n    default:\r\n      return (\r\n        <button\r\n          className={`btn btn-primary ${props.className}`}\r\n          {...otherProps}\r\n        >\r\n          {btnContent}\r\n        </button>\r\n      );\r\n  }\r\n};\r\n\r\nexport default Button;\r\n","export default __webpack_public_path__ + \"static/media/phone.830947c0.svg\";","export default __webpack_public_path__ + \"static/media/pencil.dcb4afb4.svg\";","import ListItem from \"./ListItem\";\r\n\r\nexport default ListItem;","import React from \"react\";\r\nimport Button from \"../Button\";\r\nimport phoneSvg from \"../../assets/svg/phone.svg\";\r\nimport pencilSvg from \"../../assets/svg/pencil.svg\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./listItem.scss\";\r\n\r\nconst ListItem = ({ contact, history, ...props }) => {\r\n  const { className } = props;\r\n\r\n  const edit = () => {\r\n    history.push(`/${contact.id}/edit`);\r\n  };\r\n\r\n  return (\r\n    <li className={`list-item ${className}`}>\r\n      <img className=\"list-item__photo\" src={contact.photoUrl} alt=\"\" />\r\n      <div className=\"list-item__name\">{contact.name}</div>\r\n      <div className=\"list-item__call\">\r\n        <Button btnType=\"a\" icon={phoneSvg} tel={contact.phone} />\r\n      </div>\r\n      <button className=\"list-item__edit-btn\" onClick={edit}>\r\n        <img src={pencilSvg} alt=\"\" />\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default withRouter(ListItem);\r\n","import List from \"./List\";\r\n\r\nexport default List;","import React from \"react\";\r\nimport ListItem from \"../ListItem\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./list.scss\";\r\n\r\nconst List = ({ contacts }) => {\r\n  let listItems = null;\r\n\r\n  if (contacts) {\r\n    listItems = contacts.map((contact) => {\r\n      return (\r\n        <ListItem\r\n          key={contact.id}\r\n          contact={contact}\r\n          className={\"list__list-item\"}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  return <ul className=\"list\">{listItems}</ul>;\r\n};\r\n\r\nconst sortContacts = (array) => {\r\n  return array.sort(function (a, b) {\r\n    const nameA = a.name.toLowerCase();\r\n    const nameB = b.name.toLowerCase();\r\n    if (nameA < nameB) return -1;\r\n    if (nameA > nameB) return 1;\r\n    return 0;\r\n  });\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: sortContacts(state.contacts),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(List);\r\n","import React from \"react\";\r\nimport Header from \"../../Header\";\r\nimport Button from \"../../Button\";\r\nimport List from \"../../List\";\r\nimport { setUserName } from \"../../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./main.scss\";\r\n\r\nconst Main = ({ history }) => {\r\n  const openNewContactForm = () => {\r\n    history.push(\"/new\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Header className=\"main__header\" />\r\n      <main className=\"main__main\">\r\n        <div className=\"main__actions actions\">\r\n          <Button\r\n            className=\"actions__btn\"\r\n            btnType=\"secondary\"\r\n            name=\"New Contact\"\r\n            onClick={openNewContactForm}\r\n          />\r\n          <Button\r\n            className=\"actions__btn\"\r\n            btnType=\"secondary\"\r\n            name=\"Download CSV\"\r\n          />\r\n        </div>\r\n        <div className=\"main__list\">\r\n          <List />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userName: state.userName,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setUserName,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Main));\r\n","import React from \"react\";\r\nimport \"./signIn.scss\";\r\nimport Button from \"../../Button\";\r\nimport { setUserName } from \"../../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SignIn = ({ userName, setUserName, history }) => {\r\n  const onSubmit = (event) => {\r\n    if (userName) {\r\n      sessionStorage.setItem(\"userName\", userName);\r\n      history.push(\"/\");\r\n    }\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form className=\"sign-in\" id=\"sigIn\">\r\n      <div className=\"sign-in__wrapper\">\r\n        <span className=\"sign-in__title\">SignIn</span>\r\n        <input\r\n          className=\"sign-in__input\"\r\n          defaultValue={userName}\r\n          type=\"text\"\r\n          onChange={(event) => setUserName(event.target.value)}\r\n        />\r\n        <Button\r\n          name=\"Submit\"\r\n          btnType=\"primary\"\r\n          type=\"submit\"\r\n          onClick={onSubmit}\r\n          className=\"sign-in__submit\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userName: state.userName,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setUserName,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SignIn));\r\n","export default __webpack_public_path__ + \"static/media/close.dfafe742.svg\";","import Modal from \"./Modal\";\r\n\r\nexport default Modal;","import React from \"react\";\r\nimport closeSvg from \"../../assets/svg/close.svg\";\r\nimport \"./modal.scss\";\r\n\r\nconst Modal = ({ children, history }) => {\r\n  const onCancel = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal__close\">\r\n        <button className=\"modal__close-btn\" onClick={onCancel}>\r\n          <img src={closeSvg} alt=\"\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"modal__content\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect } from \"react\";\r\nimport Button from \"../Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { setName, setPhone, addContact, updateContact } from \"../../actions\";\r\nimport \"./upsertForm.scss\";\r\n\r\nconst UpsertForm = ({\r\n  title,\r\n  setName,\r\n  setPhone,\r\n  name,\r\n  phone,\r\n  addContact,\r\n  updateContact,\r\n  history,\r\n  match,\r\n  contacts,\r\n}) => {\r\n  useEffect(() => {\r\n    return () => {\r\n      setName(\"\");\r\n      setPhone(\"\");\r\n\r\n      history.push(\"/\");\r\n    };\r\n  }, [history, setName, setPhone]);\r\n\r\n  useEffect(() => {\r\n    if (match.params.id) {\r\n      contacts.forEach((contact) => {\r\n        if (contact.id == match.params.id) {\r\n          setName(contact.name);\r\n          setPhone(contact.phone);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (event) => {\r\n    if (match.params.id) {\r\n      const contact = {\r\n        id: match.params.id,\r\n        name: name,\r\n        phone: phone,\r\n      };\r\n\r\n      updateContact(contact);\r\n    } else {\r\n      const contact = {\r\n        name: name,\r\n        phone: phone,\r\n      };\r\n\r\n      addContact(contact);\r\n    }\r\n\r\n    history.push(\"/\");\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"upsert\">\r\n      <div className=\"upsert__title upsert__row\">{title}</div>\r\n      <input\r\n        className=\"upsert__input upsert__row\"\r\n        placeholder=\"Contact Name\"\r\n        onChange={(event) => setName(event.target.value)}\r\n        defaultValue={name}\r\n      />\r\n      <input\r\n        className=\"upsert__input upsert__row\"\r\n        placeholder=\"Contact Phone\"\r\n        onChange={(event) => setPhone(event.target.value)}\r\n        defaultValue={phone}\r\n      />\r\n      <Button\r\n        className=\"upsert__row\"\r\n        btnType=\"primary\"\r\n        name=\"Save\"\r\n        size=\"m\"\r\n        onClick={onSubmit}\r\n      ></Button>\r\n      <Button\r\n        className=\"upsert__row\"\r\n        btnType=\"cancel\"\r\n        name=\"Close\"\r\n        size=\"m\"\r\n        type=\"button\"\r\n        onClick={onCancel}\r\n      ></Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    name: state.name,\r\n    phone: state.phone,\r\n    contacts: state.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setName,\r\n  setPhone,\r\n  addContact,\r\n  updateContact,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(UpsertForm));\r\n","import UpsertForm from \"./UpsertForm\";\r\n\r\nexport default UpsertForm;","import React, { useEffect } from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport Main from \"./components/pages/Main/Main\";\nimport SignIn from \"./components/pages/SignIn/SignIn\";\nimport Modal from \"./components/Modal\";\nimport UpsertForm from \"./components/UpsertForm\";\n\nconst App = ({ history }) => {\n  useEffect(() => {\n    if (!sessionStorage.getItem(\"userName\")) {\n      history.push(\"/login\");\n    }\n  }, [history]);\n\n  return (\n    <div className=\"contact-list\">\n      <Switch>\n        <Route path=\"/login\" exact component={SignIn} />\n        <Route path=\"/\" exact component={Main} />\n        <Route\n          path=\"/:id/edit\"\n          render={(props) => (\n            <Modal {...props}>\n              <UpsertForm title=\"Edit contact\" />\n            </Modal>\n          )}\n        />\n        <Route\n          path=\"/new\"\n          exact\n          render={(props) => (\n            <Modal {...props}>\n              <UpsertForm title=\"New contact\" />\n            </Modal>\n          )}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","import { nanoid } from \"nanoid\";\r\n\r\nconst initialState = {\r\n    userName: sessionStorage.getItem(\"userName\"),\r\n    contacts: sessionStorage.getItem(\"contacts\") ? JSON.parse(sessionStorage.getItem(\"contacts\")) : []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_USER_NAME\":\r\n            return {\r\n                ...state,\r\n                userName: action.payload\r\n            }\r\n        case \"ADD_CONTACT\":\r\n            const randomId = Math.floor(Math.random() * 1000);\r\n            const id = nanoid();\r\n\r\n            const contact = {\r\n                id: id,\r\n                name: action.payload.name,\r\n                phone: action.payload.phone,\r\n                photoUrl: `https://picsum.photos/id/${randomId}/200/200`,\r\n            };\r\n\r\n            const contacts = JSON.parse(sessionStorage.getItem(\"contacts\"));\r\n\r\n            if (!contacts) {\r\n                sessionStorage.setItem(\"contacts\", JSON.stringify([contact]));\r\n            } else {\r\n                sessionStorage.setItem(\"contacts\", JSON.stringify([...contacts, contact]));\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, contact]\r\n            }\r\n        case \"UPDATE_CONTACT\":\r\n            const idx = state.contacts.findIndex(\r\n                (contact) => contact.id == action.payload.id\r\n            );\r\n\r\n            const updatedContact = {\r\n                id: state.contacts[idx].id,\r\n                name: action.payload.name,\r\n                phone: action.payload.phone,\r\n                photoUrl: state.contacts[idx].photoUrl,\r\n            };\r\n\r\n            const updatedContacts = [...state.contacts.slice(0, idx), updatedContact, ...state.contacts.slice(idx + 1)];\r\n\r\n            sessionStorage.setItem(\"contacts\", JSON.stringify(updatedContacts));\r\n\r\n            return {\r\n                ...state,\r\n                contacts: updatedContacts\r\n            }\r\n        case \"SET_NAME\":\r\n            return {\r\n                ...state,\r\n                name: action.payload\r\n            }\r\n        case \"SET_PHONE\":\r\n            return {\r\n                ...state,\r\n                phone: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from \"./reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst store = createStore(reducer, composeWithDevTools());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport App from './App';\nimport \"./app.scss\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Route path=\"/\" component={App}></Route>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}